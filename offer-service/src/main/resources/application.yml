server:
  port: 9000
spring:
  profiles:
    default: dev
  application:
    name: offer-service
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://${KEYCLOAK_HOST}:${KEYCLOAK_PORT_HOST}/realms/master/protocol/openid-connect/certs
          issuer-uri: http://${KEYCLOAK_HOST}:${KEYCLOAK_PORT_HOST}/realms/local-services-platform
  kafka:
    bootstrap-servers: ${KAFKA_HOST}:${KAFKA_EXTERNAL_PORT}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: ${spring.application.name}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.github.bovvver.contracts

management:
  endpoints:
    web:
      exposure:
        include: health,info
  info:
    env:
      enabled: true

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://${EUREKA_SERVER}:8761/eureka/

info:
  app:
    name: offer-service
    description: Offer Service for Local Services Platform